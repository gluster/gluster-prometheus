#!/bin/sh

# To override version/release from git,
# create VERSION file containing text with version/release
# eg. v0.3.0-1
PKG_VERSION=`cat VERSION 2> /dev/null || git describe --tags --always --match "v[0-9]*"`

get_version()
{
    # tags and output versions:
    #   - v3.4.0   => 3.4.0
    #   - v3.4.0-1 => 3.4.0
    #   - v3.4.0-2-g34e62f   => 3.4.0
    #   - v3.4.0-1-2-g34e62f => 3.4.0
    AWK_VERSION='
    BEGIN { FS="-" }
    /^v[0-9]/ {
      sub(/^v/,"") ; print $1
    }'

    echo $PKG_VERSION | awk "$AWK_VERSION" | tr -cd '[:alnum:].'
}

get_release()
{
    # tags and output releases:
    #   - v3.4.0   => 0
    #   - v3.4.0-1 => 1
    #   - v3.4.0-2-g34e62f1   => 2.git34e62f1
    #   - v3.4.0-1-2-g34e62f1 => 1.2.git34e62f1
    AWK_RELEASE='
    BEGIN { FS="-"; OFS="." }
    /^v[0-9]/ {
      if (NF == 1) print 0
      else if (NF == 2) print $2
      else if (NF == 3) print $2, "git" substr($3, 2)
      else if (NF == 4) print $2, $3, "git" substr($4, 2)
    }'

    echo $PKG_VERSION | awk "$AWK_RELEASE" | tr -cd '[:alnum:].'
}

if test "x$1" = "x--full"; then
    echo -n "v$(get_version)-$(get_release)"
elif test "x$1" = "x--version"; then
    get_version
elif test "x$1" = "x--release"; then
    get_release
else
    echo "usage: $0 [--full|--version|--release]"
    exit 1
fi
